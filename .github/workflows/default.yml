name: Default

on:
  push:
    branches:
      - master
  release:
    types:
      - published

# There are only two main events that can happen:
# * push / merge to the master
# * release
#
# When anyone push anything to the master, we want to run
# some default checks like lint, tests, or if build passes.
# If these checks are successful, we want to build the whole
# project as container and push it to container registry.
# In case of dev environment available, re-deploy latest version.
#
# Second case is, when some new feature or fix is ready
# and it should go public. In this case, we can create a release
# in GitHub and publish it. This will trigger release event
# with the tag set in GITHUB_REF env variable. We can again
# run all checks and build container but this time it is not
# tagged as "latest", but the tag from the release is used.
jobs:
  lint_and_build:
    name: Lint and build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
        cache: 'yarn'
    - name: Install dependencies
      run: yarn install
    - name: Lint
      run: yarn run lint
    - name: Build
      run: yarn run build
  push_latest:
    name: Push latest
    runs-on: ubuntu-latest
    # run this job only if "lint_and_build" jobs ends with success
    needs: [lint_and_build]
    # run this job only if someone pushed something to the master
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v3
    - name: Set variables
      id: vars
      run: echo ::set-output name=tag::latest
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_CONTAINER_REGISTRY_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: node-docker-kubernetes
        TAG: ${{ steps.vars.outputs.tag }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$TAG .
        docker push $REGISTRY/$REPOSITORY:$TAG
